name: test_SwinIR.yml
suffix: ~  # add suffix to saved images
model_type: SwinGIRModel
scale: 4
crop_border: ~  # crop border when evaluation. If None, crop the scale pixels
num_gpu: 0  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: set5
    type: PairedImageDataset
    dataroot_gt: 
    dataroot_lq: 
    filename_temp1: '{}x4'
    io_backend:
      type: disk
  # test_2:  
  #   name: set14
  #   type: PairedImageDataset
  #   dataroot_gt: 
  #   dataroot_lq:
  #   io_backend:
  #     type: disk

  # test_3: 
  #   name: BSD100
  #   type: PairedImageDataset
  #   dataroot_gt:
  #   dataroot_lq: 
  #   filename_tmpl: '{}x4'
  #   io_backend:
  #     type: disk

  # test_4:  # the 2nd test dataset
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt:
  #   dataroot_lq: 
  #   filename_tmpl: '{}x4'
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: SwinGIR
  upscale: 4
  in_chans: 3
  img_size: 48
  window_size: 8
  img_range: 1.
  depths: [ 6, 6, 6, 6, 6, 6 ]
  embed_dim: 180
  num_heads: [ 6, 6, 6, 6, 6, 6 ]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# save_img: true
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
      better: better  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
      better: better

# path
path:
  pretrain_network_g: experiments/best.pth
  strict_load_g: true
